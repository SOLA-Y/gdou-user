<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <properties resource = "generator.properties"/>

    <!--
        targetRuntime：MyBatis3，生成带条件的查询文件
    -->
    <context id = "MySqlContext" targetRuntime = "MyBatis3" defaultModelType = "flat">
        <property name = "beginningDelimiter" value = "`"/>
        <property name = "endingDelimiter" value = "`"/>
        <property name = "javaFileEncoding" value = "UTF-8"/>
        <!-- 为模型生成序列化方法-->
        <plugin type = "org.mybatis.generator.plugins.SerializablePlugin"/>
        <!-- 为生成的Java模型创建一个toString方法 -->
        <plugin type = "org.mybatis.generator.plugins.ToStringPlugin"/>
        <!--生成mapper.xml时覆盖原文件-->
        <plugin type = "org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin"/>

        <!--
            commentGenerator：压制注释
        -->
        <commentGenerator>
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <!-- suppressAllComments：去掉所有注释 -->
            <property name = "suppressAllComments" value = "true"/>

            <!--<property name = "suppressDate" value = "true"/>-->
            <!--<property name = "addRemarkComments" value = "true"/>-->
        </commentGenerator>

        <jdbcConnection driverClass = "${jdbc.driverClass}"
                        connectionURL = "${jdbc.connectionURL}"
                        userId = "${jdbc.userId}"
                        password = "${jdbc.password}">
            <!--解决mysql驱动升级到8.0后不生成指定数据库代码的问题-->
            <property name = "nullCatalogMeansCurrent" value = "true"/>
        </jdbcConnection>

        <!--
            javaModelGenerator：指定javaBean的生成策略
              targetPackage：放置生成pojo的包
              targetProject：目标工程
        -->
        <javaModelGenerator targetPackage = "com.gdou.user.pojo" targetProject = ".\src\main\java"/>

        <!--
            sqlMapGenerator：sql映射生成策略
        -->
        <sqlMapGenerator targetPackage = "com.gdou.user.mapper" targetProject = ".\src\main\resources"/>

        <!--
            javaClientGenerator：指定mapper接口所在的位置
        -->
        <javaClientGenerator type = "XMLMAPPER" targetPackage = "com.gdou.user.mapper"
                             targetProject = ".\src\main\java"/>

        <!--
            table：指定要逆向分析哪些表，根据表创建javaBean
              domainObjectName：指定生成的javaBean类的名称
        -->
        <table tableName = "user" domainObjectName="User"/>

        <!--生成全部表，tableName设为%
        <table tableName="%">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        -->
    </context>
</generatorConfiguration>